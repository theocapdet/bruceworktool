/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UserList.java
 *
 * Created on Oct 12, 2009, 9:55:31 AM
 */
package cititool.chat.client.UI;

import cititool.chat.client.ClientContext;
import cititool.chat.client.handler.ClientRecHandler;
import cititool.model.UserInfo;
import cititool.util.ComponentHelper;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.Socket;
import java.util.prefs.Preferences;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author zx04741
 */
public class UserInfoFrame extends javax.swing.JFrame {

    /** Creates new form UserList */
    public UserInfoFrame(String username, final Socket s) {
        this.curuser = username;
        initComponents();
        ClientContext.instance();
        ClientContext.setCurSocket(s);
        initdata();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        listpane = new javax.swing.JTabbedPane();
        userlistarea = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTree = new javax.swing.JTree();
        serverlist = new javax.swing.JPanel();
        storefolder = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        clientlog = new javax.swing.JTextPane();
        chattab = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();

        jPanel1.setName("jPanel1"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(cititool.MainApp.class).getContext().getResourceMap(UserInfoFrame.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jSplitPane1.setDividerLocation(250);
        jSplitPane1.setName("jSplitPane1"); // NOI18N
        jSplitPane1.setOneTouchExpandable(true);

        listpane.setName("listpane"); // NOI18N
        listpane.setPreferredSize(new java.awt.Dimension(200, 500));

        userlistarea.setName("userlistarea"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        userTree.setName("userTree"); // NOI18N
        userTree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userTreeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(userTree);

        javax.swing.GroupLayout userlistareaLayout = new javax.swing.GroupLayout(userlistarea);
        userlistarea.setLayout(userlistareaLayout);
        userlistareaLayout.setHorizontalGroup(
            userlistareaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
        );
        userlistareaLayout.setVerticalGroup(
            userlistareaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
        );

        listpane.addTab(resourceMap.getString("userlistarea.TabConstraints.tabTitle"), userlistarea); // NOI18N

        serverlist.setName("serverlist"); // NOI18N

        storefolder.setText(resourceMap.getString("storefolder.text")); // NOI18N
        storefolder.setName("storefolder"); // NOI18N

        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout serverlistLayout = new javax.swing.GroupLayout(serverlist);
        serverlist.setLayout(serverlistLayout);
        serverlistLayout.setHorizontalGroup(
            serverlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverlistLayout.createSequentialGroup()
                .addComponent(storefolder, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        serverlistLayout.setVerticalGroup(
            serverlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverlistLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(serverlistLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(storefolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(495, Short.MAX_VALUE))
        );

        listpane.addTab(resourceMap.getString("serverlist.TabConstraints.tabTitle"), serverlist); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        clientlog.setEditable(false);
        clientlog.setName("clientlog"); // NOI18N
        clientlog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientlogMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(clientlog);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 529, Short.MAX_VALUE)
        );

        listpane.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jSplitPane1.setLeftComponent(listpane);

        chattab.setName("chattab"); // NOI18N
        chattab.setPreferredSize(new java.awt.Dimension(400, 400));

        jPanel3.setName("jPanel3"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 728, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 529, Short.MAX_VALUE)
        );

        chattab.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jSplitPane1.setRightComponent(chattab);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userTreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userTreeMouseClicked
        try {
            // TODO add your handling code here:
            //get userinfo from server
            if (evt.getButton() == MouseEvent.BUTTON3) {
                if (menu == null) {
                    menu = new JPopupMenu();
                    JMenuItem item = new JMenuItem("fresh");
                    item.addActionListener(new ActionListener() {

                        public void actionPerformed(ActionEvent e) {
                            SwingUtilities.invokeLater(new Runnable() {

                                public void run() {
                                    freshtree();
                                }
                            });
                            menu.setVisible(false);
                        }
                    });
                    menu.add(item);
                }
                menu.setLocation(evt.getLocationOnScreen());
                menu.setVisible(true);
            }
            if (evt.getButton() != MouseEvent.BUTTON3) {
                if (menu != null) {
                    menu.setVisible(false);
                }
            }
            //get user information
            TreePath path = userTree.getSelectionPath();
            DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();
            if (path != null && node.isLeaf() ) {
                
                String username = node.getUserObject().toString();
                UserInfo user = ClientContext.getCacheInfo(username);
                if (user == null) {
                    user = ClientContext.loadUserInfotFromServer(username);
                    ClientContext.setCacheInfo(username, user);
                }
                if (evt.getButton() == MouseEvent.BUTTON1) {
                    if (evt.getClickCount() == 2) {
                        if (user != null) {
                            tab.addPanel(user);
                            //get userinfo socket
                        }
                    } else if (evt.getClickCount() == 1) {
                    }
                }
            }
        } catch (IOException ex) {
            ClientContext.productLog("userTreeClick==>", ex);
        } catch (ClassNotFoundException ex) {
            ClientContext.productLog("userTreeClient==>", ex);
        }
    }//GEN-LAST:event_userTreeMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ComponentHelper.filePopup(storefolder, "storedfolder", pref, this);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void clientlogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientlogMouseClicked
        // TODO add your handling code here:
        ComponentHelper.clearPopup(evt, clientlog);

    }//GEN-LAST:event_clientlogMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane chattab;
    private javax.swing.JTextPane clientlog;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane listpane;
    private javax.swing.JPanel serverlist;
    private javax.swing.JTextField storefolder;
    private javax.swing.JTree userTree;
    private javax.swing.JPanel userlistarea;
    // End of variables declaration//GEN-END:variables
    private ChatUserinfoTabDef tab;
    private Preferences  pref;
    private String curuser;
    private JPopupMenu menu;

    private void freshtree() {
        try {
            DefaultTreeModel inittree = new DefaultTreeModel(new DefaultMutableTreeNode("loadiing user tree..."));
            userTree.setModel(inittree);
            Object[] onlineuser = ClientContext.loadUserListFromServer(curuser);
            ClientContext.productLog("onlineuser size==>" + onlineuser.length, null);
            DefaultMutableTreeNode root = new DefaultMutableTreeNode("users online");
            for (int i = 0; i < onlineuser.length; i++) {
                String username = onlineuser[i].toString();
                DefaultMutableTreeNode node = new DefaultMutableTreeNode(username);
                root.add(node);
            }
            DefaultTreeModel tree = new DefaultTreeModel(root);
            userTree.setModel(tree);
            userTree.updateUI();
        } catch (IOException ex) {
            ClientContext.warnLog("fresh tree() ", ex);
        } catch (ClassNotFoundException ex) {
            ClientContext.warnLog("fresh tree() ", ex);
        }
    }

    private void loadSetting(){

        pref = Preferences.userRoot().node("/com/chat/usersetting/"+curuser);
        storefolder.setText(pref.get("storedfolder", ""));
    }

    private void initdata() {
        tab = new ChatUserinfoTabDef(chattab);
        ClientContext.setlog(clientlog);
        Thread t = new Thread(new Runnable() {
            public void run() {
                try {
                    //loadSetting
                    loadSetting();
                    
                    //load online info
                    freshtree();
                    //load self info
                    UserInfo c = ClientContext.loadUserInfotFromServer(curuser);
                    //load picture



                    ClientContext.setCacheInfo(curuser, c);
                    //start recv thread
                    ClientRecHandler hander=new ClientRecHandler(ClientContext.getCurrentSocket());
                    hander.start();
                } catch (IOException ex) {
                    ClientContext.warnLog("initdata() ", ex);
                } catch (ClassNotFoundException ex) {
                    ClientContext.warnLog("initdata() ", ex);
                }
            }
        });
        t.start();

    }
}
